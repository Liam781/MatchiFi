# -*- coding: utf-8 -*-
"""matchifi algo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z20Bucx2wEIHjaxD0bZDoEScfNyTH25T
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

data_df=pd.read_excel('/content/drive/MyDrive/Loan.xlsx',header=2,)
data_df.head()
data_df=data_df.drop('Unnamed: 0',axis=1)
data_df.head()

print(data_df.columns)

z=data_df.drop('Company Name',axis=1)
x=z.drop('Loan status',axis=1)
y=data_df['Loan status']

## split train data#
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3, shuffle=True, random_state=50)

## fit ml model ##
model=LogisticRegression(C=10,penalty='l2',solver='saga',max_iter=10000)

pred_model=model.fit(x_train,y_train)

y_pred=pred_model.predict(x_test)
y_pred

accuracy=accuracy_score(y_test,y_pred)
print(accuracy)

def fetch_nd_recommend(df):

    for i in df.columns:
        if i=='Company Name':
            features=df.drop('Company Name',axis=1)
        else:
            features=df
    status=list(pred_model.predict(features))
    return status

my_df=data_df.drop('Loan status',axis=1)
my_df=my_df.drop('Company Name',axis=1)
my_df.head()

# @title
print(fetch_nd_recommend(my_df))